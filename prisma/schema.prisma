generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

enum Role {
  USER
  ADMIN
}

model User {
  id         Int         @id @default(autoincrement())
  username   String      @unique
  email      String      @unique
  password   String
  role       Role        @default(USER)
  rentals    Rental[]
  balance    Int         @default(0)
  warehouses Warehouse[]
}

model WarehouseType {
  id         String      @id @default(cuid())
  nameUk     String      @unique
  nameEn     String?     @unique
  warehouses Warehouse[]
}

enum WarehouseStatus {
  AVAILABLE
  RENTED
  UNAVAILABLE
}

model Warehouse {
  id              String          @id @default(cuid())
  nameUk          String
  nameEn          String?
  addressUk       String // en version will be transliterated
  dailyRate       Int
  status          WarehouseStatus @default(AVAILABLE)
  rentals         Rental[]
  warehouseTypeId String
  warehouseType   WarehouseType   @relation(fields: [warehouseTypeId], references: [id])
  owner           User            @relation(fields: [ownerId], references: [id])
  ownerId         Int
  smartLock       SmartLock?
}

model Rental {
  id          Int       @id @default(autoincrement())
  startDate   DateTime
  endDate     DateTime
  balance     Int
  user        User      @relation(fields: [userId], references: [id])
  userId      Int
  warehouse   Warehouse @relation(fields: [warehouseId], references: [id])
  warehouseId String
}

model SmartLock {
  id          Int        @id @default(autoincrement())
  imei        String     @unique
  warehouse   Warehouse? @relation(fields: [warehouseId], references: [id])
  warehouseId String?    @unique
}
